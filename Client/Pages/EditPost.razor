@page "/bz-admin/post/edit/{postId}"
@using BlazorCms.ViewModels
@inject IPostViewModel _postViewModel

<AuthorizeView>
    <Authorized>
        <div class="container">
            <div class="row">
                <div class="col-12">
                    <h1>Edit post</h1>
                    <MessageNotify Alert="success" Title="@_postViewModel.Message" Display="@_postViewModel.Display" />
                </div>
            </div>
        </div>
        <div class="container">
            <div class="row">
                <div class="col-sm-9">
                    <SfTextBox Placeholder='Post title' @bind-Value="@_postViewModel.PostTitle"></SfTextBox>
                    <br><br>
                    <SfRichTextEditor @bind-value="@_postViewModel.PostContent">
                        <RichTextEditorToolbarSettings Items="@_postViewModel.Tools" />
                    </SfRichTextEditor>
                    <br><br>
                    <SfButton @onclick="_postViewModel.Update" CssClass="e-info">Update</SfButton>
                </div>
                <div class="col-sm-3">
                    <h5>Thumbnail</h5>
                    <div class="thumbnail">
                        <img src="@_postViewModel.PostThumbnail" alt="@_postViewModel.PostTitle">
                    </div>
                        <SfUploader ID="UploadFiles" AutoUpload="false">
                            <UploaderEvents Success="_postViewModel.OnImageUploadedSuccess"></UploaderEvents>
                            <UploaderAsyncSettings SaveUrl="blobstorage/uploadimage" RemoveUrl="blobstorage/removeimage"></UploaderAsyncSettings>
                        </SfUploader>
                    <hr>
                    <h5>Author</h5>
                    <p>Francisco Bizi</p>
                    <h5>Date</h5>
                    <input style="width:100%" type="date" @bind-value="@_postViewModel.PostCreated">
                </div>
            </div>
        </div>
    </Authorized>
    <NotAuthorized>
        <UserAuthForm></UserAuthForm>
    </NotAuthorized>
</AuthorizeView>

@code {
    [Parameter]
    public string postId { get; set; }
    protected override async Task OnInitializedAsync() => await _postViewModel.GetOne(this.postId);   
}
